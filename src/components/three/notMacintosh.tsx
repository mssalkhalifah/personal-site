/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { Html, Image, useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import "./crt.css";
import backgroundImage from "../../../public/bezel.png";

type GLTFResult = GLTF & {
  nodes: {
    Screen: THREE.Mesh;
    hackintiosh005: THREE.Mesh;
  };
  materials: {
    Material: THREE.MeshStandardMaterial;
    ["hackintiosh_mtl.005"]: THREE.MeshStandardMaterial;
  };
};

export function Computer(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF(
    "/notMacintosh.glb"
  ) as unknown as GLTFResult;

  const vertexShader = `
    varying vec2 vUv;
    void main() {
      vUv = uv;
      gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);
    }
  `;

  const fragmentShader = `
    void main() {
    	gl_FragColor = vec4(1.0,0.0,1.0,1.0);
    }
  `;

  return (
    <group {...props} dispose={null}>
      <mesh
        name="Screen"
        // castShadow
        // receiveShadow
        // geometry={nodes.Screen.geometry}
        // material={materials.Material}
        position={[0, 5.25, 3]}
        // rotation={[-Math.PI / 2, 1.57, 0]}
        scale={[1.62 * 2, 1.5 * 2, 2 * 2]}
      >
        <Html
          className="h-[512px] w-[512px]"
          center
          transform
          scale={0.11}
          position={[0, 0, 0.12]}
          occlude="blending"
        >
          <img
            className="absolute -z-10"
            src={backgroundImage.src}
            alt="screen-border"
          />
        </Html>
        <Html
          // rotation={[Math.PI / 2, 0, Math.PI / 2]}
          scale={0.11}
          position={[0, 0, 0.121]}
          transform
          // occlude
          occlude="blending"
          className="h-[500px] w-[500px] text-2xl text-[#ffffff]"
        >
          <div id="monitor">
            <div id="bazel">
              <div id="crt">
                <div className="scanline"></div>
                <div className="terminal p-5">
                  &gt; Execute about me program... <br />A bachelor of computer
                  science at Imam Mohammad Ibn Saud Islamic University with
                  first-class honor. A Saudi. And like developing video games
                  and web apps as a hobby. <br />
                  Skills: <br />
                  React:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                  [##########&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;] <br />
                  TypeScript: [##########&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;]
                </div>
              </div>
            </div>
          </div>
        </Html>
      </mesh>
      <mesh
        name="hackintiosh005"
        castShadow
        receiveShadow
        geometry={nodes.hackintiosh005.geometry}
        material={materials["hackintiosh_mtl.005"]}
        rotation={[Math.PI / 2, 0, 0]}
      />
    </group>
  );
}

useGLTF.preload("/notMacintosh.glb");
